import streamlit as st
from dotenv import load_dotenv
from utils import (
    send_message_llm,
    init_db,
    load_history_db,
    save_history_db
)

load_dotenv()

# –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î (—Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –Ω–µ—Ç)
init_db()

st.title("ü¶ô –ß–∞—Ç —Å LLaMA-3-8b")
st.caption("–ò—Å–ø–æ–ª—å–∑—É–µ–º OpenAI-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π API —á–µ—Ä–µ–∑ LangChain")

# –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –ë–î, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
if "messages" not in st.session_state:
    st.session_state.messages = load_history_db(conversation_id="default")

# –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
if st.sidebar.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
    st.session_state.messages = [
        {"role": "system", "content": "You are a helpful AI assistant."}
    ]
    save_history_db(st.session_state.messages, conversation_id="default")

# –ü—Ä–∏–Ω–∏–º–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_input = st.chat_input("–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")

if user_input:
    st.session_state.messages.append({"role": "user", "content": user_input})
    with st.chat_message("user"):
        st.markdown(user_input)

    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç LLM
    answer = send_message_llm(st.session_state.messages)
    st.session_state.messages.append({"role": "assistant", "content": answer})
    with st.chat_message("assistant"):
        st.markdown(answer)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –≤ –ë–î
    save_history_db(st.session_state.messages, conversation_id="default")

